# An example: https://gist.github.com/markandrewj/ead05ebc20f3968ec07e

# A guide: https://builtin.com/articles/tmux-config

display "Hey tmux"

# Set options
unbind C-b
unbind C-a
set -g prefix C-a
bind C-a send-prefix

# set-option -sa terminal-overrides ", xterm*: To"
set -g mouse on
set -g prefix C-a

# Split panes
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"

bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Swap windows
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# Switch session
bind-key C-a switch-client -l

# New window with current path
bind c new-window -c "#{pane_current_path}"

# Last window
bind Space last-window

# Focus events
set -g focus-events on

set -g set-clipboard on
# Improve colors
set -g default-terminal 'screen-256color'

# Set scrollback buffer to 10000
set -g history-limit 5000

# Themes and shit
set -g status-position top
set -g @plugin 'o0th/tmux-nova'
set -g status-left-length 100

set -g @nova-nerdfonts false
# set -g @nova-nerdfonts-left ' '
# set -g @nova-nerdfonts-right ' '

set -g @nova-pane-active-border-style "#44475a"
set -g @nova-pane-border-style "#282a36"



set -g @nova-status-style-fg "#d8dee9"


set -g @nova-status-style-double-bg "#2d3540"

# Custom pane format for nova plugin:
# #I          = pane index
# #{?...}     = conditional: if pane is in a special mode, show the mode
# #W          = window name
# Format: "index : mode(if any) : window_name"
set -g @nova-pane "#(if [ "$(uname)" = "Darwin" ]; then echo üçé; else echo üêß; fi) #(date '+%H:%M') #($HOME/dotfiles/scripts/weather.sh)"
set -g @nova-pane-justify "absolute-centre"
# set -g @nova-pane "#I #W"

#set -g @nova-segment-mode "#{?client_prefix,Œ©,œâ}"
set -g @nova-segment-mode "W#I S#S#{?pane_in_mode, : [#{pane_mode}],} : #W"

#set -g @nova-segment-whoami "#(date '+%H:%M %d/%b/%y') #(whoami)"
set -g @nova-segment-whoami "#(whoami)@#H"



#set -g @nova-segment-time "#[fg=yellow]: %d %b %Y #[fg=green]: %l:%M %p : #(date -u | awk '{print $4}') :"
if-shell '[ "$(uname)" = "Darwin" ]' {
    # macOS specific settings
    set -g @nova-status-style-active-bg "#89c0d0"
    set -g @nova-status-style-bg "#4c566a"
    set -g @nova-status-style-active-fg "#2e3540"

    set -g @nova-segment-mode-colors "#78a2c1 #2e3440" # bg, fg
    set -g @nova-segment-whoami-colors "#78a2c1 #2e3440"

} {
    # Linux/other OS specific settings
    set -g @nova-status-style-active-bg "#6276a4"
    set -g @nova-status-style-bg "#44475A"
    set -g @nova-status-style-active-fg "#d8dee9"

    set -g @nova-segment-mode-colors "#50FA7B #2e3440" # bg, fg
    set -g @nova-segment-whoami-colors "#50FA7B #2e3440"
}

set -g @nova-rows 0
set -g @nova-segments-0-left "mode"
set -g @nova-segments-0-right "whoami"

# Start windows and panes at 1, not o
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Set key binghdings

# Reload tmux config by pressing `prefix + r`
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# set vi-mode
set-window-option -g mode-keys vi
# keybindings / bind = bind-key
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'o0th/tmux-nova'
set -g @plugin 'christoomey/vim-tmux-navigator'
# To set a different key-binding, use the plugin configuration settings (remember to update your vim config accordingly). Multiple key bindings are possible, use a space to separate.
#	set -g @vim_navigator_mapping_left "C-Left C-h"  # use C-h and C-Left
#	set -g @vim_navigator_mapping_right "C-Right C-l"
#	set -g @vim_navigator_mapping_up "C-k"
#	set -g @vim_navigator_mapping_down "C-j"
#	set -g @vim_navigator_mapping_prev ""  # removes the C-\ binding
# set -g @plugin 'dracula/tmux'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
